services:
  # XSS Hunter Express service
  xsshunterexpress:
    build: .
    environment:
      # [REQUIRED] The hostname/domain pointed to 
      # the IP of the server running this service. 
      - HOSTNAME=yourdomain.com
      # Maximum XSS callback payload size
      # This includes the webpage screenshot, DOM HTML,
      # page text, and other metadata. Note that if the
      # payload is above this limit, you won't be notified
      # of the XSS firing.
      - MAX_PAYLOAD_UPLOAD_SIZE_MB=50
      # Whether or not to enable the web control panel
      # Set to "false" or remove to disable the web UI.
      # Useful for minimizing attack surface.
      - CONTROL_PANEL_ENABLED=true
      # Discord webhook URL for notifications of XSS payload fires
      # Create a webhook in your Discord server and paste the URL here
      - DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/......
      # Where XSS screenshots are stored
      - SCREENSHOTS_DIR=/app/payload-fire-images
      - DATABASE_NAME=xsshunterexpress
      - DATABASE_USER=xsshunterexpress
      - DATABASE_PASSWORD=xsshunterexpress
      - DATABASE_HOST=postgresdb
      - NODE_ENV=production
    ports:
      - "80:8082"
    volumes:
      # Directory where payload fire images are stored.
      - ./payload-fire-images:/app/payload-fire-images
    depends_on:
      postgresdb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8082/health', (r) => r.statusCode === 200 ? process.exit(0) : process.exit(1))"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Postgres server to store injection data
  postgresdb:
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: xsshunterexpress
      POSTGRES_DB: xsshunterexpress
      POSTGRES_PASSWORD: xsshunterexpress
    volumes:
      - ./postgres-db-data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U xsshunterexpress"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
